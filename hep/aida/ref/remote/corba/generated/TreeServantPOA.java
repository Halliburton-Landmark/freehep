package hep.aida.ref.remote.corba.generated;


/**
* hep/aida/ref/remote/corba/generated/TreeServantPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from hep/aida/ref/remote/corba/idl/InterfaceDef.idl
* Thursday, August 14, 2003 7:33:29 PM PDT
*/


// TreeServant that it is ready to receive information about changes/updates in ITree.
public abstract class TreeServantPOA extends org.omg.PortableServer.Servant
 implements hep.aida.ref.remote.corba.generated.TreeServantOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("listObjectNames", new java.lang.Integer (0));
    _methods.put ("listObjectTypes", new java.lang.Integer (1));
    _methods.put ("find", new java.lang.Integer (2));
    _methods.put ("setValid", new java.lang.Integer (3));
    _methods.put ("updates", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // The path is an absolute path from the ITree root.
       case 0:  // hep/aida/ref/remote/corba/generated/TreeServant/listObjectNames
       {
         String path = in.read_string ();
         String $result[] = null;
         $result = this.listObjectNames (path);
         out = $rh.createReply();
         hep.aida.ref.remote.corba.generated.StringListHelper.write (out, $result);
         break;
       }


  // The path is an absolute path from the ITree root.
       case 1:  // hep/aida/ref/remote/corba/generated/TreeServant/listObjectTypes
       {
         String path = in.read_string ();
         String $result[] = null;
         $result = this.listObjectTypes (path);
         out = $rh.createReply();
         hep.aida.ref.remote.corba.generated.StringListHelper.write (out, $result);
         break;
       }


  //Hist1DData find(in string path);
       case 2:  // hep/aida/ref/remote/corba/generated/TreeServant/find
       {
         String path = in.read_string ();
         org.omg.CORBA.Any $result = null;
         $result = this.find (path);
         out = $rh.createReply();
         out.write_any ($result);
         break;
       }


  // receive information about changes/updates of IManagedObjects at "nodePaths".
       case 3:  // hep/aida/ref/remote/corba/generated/TreeServant/setValid
       {
         String nodePaths[] = hep.aida.ref.remote.corba.generated.StringListHelper.read (in);
         this.setValid (nodePaths);
         out = $rh.createReply();
         break;
       }


  // This method also cleans-up/invalidetes all updates included in the EventList.
       case 4:  // hep/aida/ref/remote/corba/generated/TreeServant/updates
       {
         hep.aida.ref.remote.corba.generated.EventStruct $result[] = null;
         $result = this.updates ();
         out = $rh.createReply();
         hep.aida.ref.remote.corba.generated.EventListHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:hep/aida/ref/remote/corba/generated/TreeServant:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public TreeServant _this() 
  {
    return TreeServantHelper.narrow(
    super._this_object());
  }

  public TreeServant _this(org.omg.CORBA.ORB orb) 
  {
    return TreeServantHelper.narrow(
    super._this_object(orb));
  }


} // class TreeServantPOA
