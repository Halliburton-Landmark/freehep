package hep.aida.ref.remote.corba.generated;


/**
* hep/aida/ref/remote/corba/generated/_TreeServantStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from hep/aida/ref/remote/corba/idl/InterfaceDef.idl
* Thursday, August 14, 2003 7:33:29 PM PDT
*/


// TreeServant that it is ready to receive information about changes/updates in ITree.
public class _TreeServantStub extends org.omg.CORBA.portable.ObjectImpl implements hep.aida.ref.remote.corba.generated.TreeServant
{


  // The path is an absolute path from the ITree root.
  public String[] listObjectNames (String path)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listObjectNames", true);
                $out.write_string (path);
                $in = _invoke ($out);
                String $result[] = hep.aida.ref.remote.corba.generated.StringListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listObjectNames (path        );
            } finally {
                _releaseReply ($in);
            }
  } // listObjectNames


  // The path is an absolute path from the ITree root.
  public String[] listObjectTypes (String path)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listObjectTypes", true);
                $out.write_string (path);
                $in = _invoke ($out);
                String $result[] = hep.aida.ref.remote.corba.generated.StringListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listObjectTypes (path        );
            } finally {
                _releaseReply ($in);
            }
  } // listObjectTypes


  //Hist1DData find(in string path);
  public org.omg.CORBA.Any find (String path)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("find", true);
                $out.write_string (path);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return find (path        );
            } finally {
                _releaseReply ($in);
            }
  } // find


  // receive information about changes/updates of IManagedObjects at "nodePaths".
  public void setValid (String[] nodePaths)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setValid", true);
                hep.aida.ref.remote.corba.generated.StringListHelper.write ($out, nodePaths);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setValid (nodePaths        );
            } finally {
                _releaseReply ($in);
            }
  } // setValid


  // This method also cleans-up/invalidetes all updates included in the EventList.
  public hep.aida.ref.remote.corba.generated.EventStruct[] updates ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updates", true);
                $in = _invoke ($out);
                hep.aida.ref.remote.corba.generated.EventStruct $result[] = hep.aida.ref.remote.corba.generated.EventListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updates (        );
            } finally {
                _releaseReply ($in);
            }
  } // updates

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:hep/aida/ref/remote/corba/generated/TreeServant:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _TreeServantStub
