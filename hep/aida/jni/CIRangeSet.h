/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class hep_aida_jni_CIRangeSet */

#ifndef _Included_hep_aida_jni_CIRangeSet
#define _Included_hep_aida_jni_CIRangeSet
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    lowerBounds
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_hep_aida_jni_CIRangeSet_lowerBounds
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    upperBounds
 * Signature: ()[D
 */
JNIEXPORT jdoubleArray JNICALL Java_hep_aida_jni_CIRangeSet_upperBounds
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    include
 * Signature: (DD)V
 */
JNIEXPORT void JNICALL Java_hep_aida_jni_CIRangeSet_include
  (JNIEnv *, jobject, jdouble, jdouble);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    exclude
 * Signature: (DD)V
 */
JNIEXPORT void JNICALL Java_hep_aida_jni_CIRangeSet_exclude
  (JNIEnv *, jobject, jdouble, jdouble);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    includeAll
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hep_aida_jni_CIRangeSet_includeAll
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    excludeAll
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_hep_aida_jni_CIRangeSet_excludeAll
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    isInRange
 * Signature: (D)Z
 */
JNIEXPORT jboolean JNICALL Java_hep_aida_jni_CIRangeSet_isInRange
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    size
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_hep_aida_jni_CIRangeSet_size
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    PLUS_INF
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_hep_aida_jni_CIRangeSet_PLUS_1INF
  (JNIEnv *, jobject);

/*
 * Class:     hep_aida_jni_CIRangeSet
 * Method:    MINUS_INF
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_hep_aida_jni_CIRangeSet_MINUS_1INF
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
